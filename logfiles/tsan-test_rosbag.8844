==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=8844)
  Cycle in lock order graph: M448 (0x7f869bca10a8) => M451 (0x7f869bca1148) => M448

  Mutex M451 acquired here while holding mutex M448 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M448 acquired here while holding mutex M451 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=8844)
  Cycle in lock order graph: M654 (0x7b540000ffc0) => M585 (0x7b4400000420) => M654

  Mutex M585 acquired here while holding mutex M654 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::recursive_mutex>::lock() <null> (libroscpp.so+0xa4ddf)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M654 acquired here while holding mutex M585 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::TransportTCP::enableWrite() <null> (libroscpp.so+0x113147)

  Thread T1 (tid=8888, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=8844)
  Cycle in lock order graph: M644 (0x7b5000000f30) => M654 (0x7b540000ffc0) => M644

  Mutex M654 acquired here while holding mutex M644 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::TransportTCP::enableWrite() <null> (libroscpp.so+0x113147)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M644 acquired here while holding mutex M654 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::Publication::addSubscriberLink(boost::shared_ptr<ros::SubscriberLink> const&) <null> (libroscpp.so+0xe4847)

  Thread T1 (tid=8888, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=8844)
  Cycle in lock order graph: M650 (0x7b5000001130) => M701 (0x7b5400010240) => M650

  Mutex M701 acquired here while holding mutex M650 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::TransportTCP::enableWrite() <null> (libroscpp.so+0x113147)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M650 acquired here while holding mutex M701 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::Publication::removeSubscriberLink(boost::shared_ptr<ros::SubscriberLink> const&) <null> (libroscpp.so+0xe4047)

  Thread T1 (tid=8888, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: data race (pid=8844)
  Write of size 8 at 0x7b0800012c68 by thread T1 (mutexes: write M701, write M711):
    #0 operator delete(void*) <null> (libtsan.so.0+0x741fd)
    #1 boost::detail::sp_counted_impl_pd<unsigned char*, boost::checked_array_deleter<unsigned char> >::~sp_counted_impl_pd() /usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:146 (double_pub+0xdeea)
    #2 ros::TransportSubscriberLink::~TransportSubscriberLink() <null> (libroscpp.so+0x12619c)

  Previous atomic write of size 4 at 0x7b0800012c68 by main thread:
    #0 __tsan_atomic32_fetch_sub <null> (libtsan.so.0+0x68aed)
    #1 std::__atomic_base<int>::fetch_sub(int, std::memory_order) /usr/include/c++/7/bits/atomic_base.h:524 (double_pub+0x967e)
    #2 boost::detail::atomic_decrement(std::atomic<int>*) /usr/include/boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp:35 (double_pub+0x967e)
    #3 boost::detail::sp_counted_base::release() /usr/include/boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp:108 (double_pub+0x97fe)
    #4 boost::detail::shared_count::~shared_count() /usr/include/boost/smart_ptr/detail/shared_count.hpp:426 (double_pub+0x9964)
    #5 boost::shared_array<unsigned char>::~shared_array() /usr/include/boost/smart_ptr/shared_array.hpp:45 (double_pub+0x9c0b)
    #6 ros::SerializedMessage::~SerializedMessage() /opt/ros/melodic/include/ros/serialized_message.h:39 (double_pub+0xa63d)
    #7 void ros::Publisher::publish<std_msgs::String_<std::allocator<void> > >(std_msgs::String_<std::allocator<void> > const&) const /opt/ros/melodic/include/ros/publisher.h:117 (double_pub+0xb6d7)
    #8 main /catkin/buildtmp/test_rosbag/src/test_rosbag/test/double_pub.cpp:19 (double_pub+0x91ed)

  Mutex M701 (0x7b5400010240) created at:
    #0 pthread_mutex_init <null> (libtsan.so.0+0x2c5bd)
    #1 ros::TransportTCP::TransportTCP(ros::PollSet*, int) <null> (libroscpp.so+0x112d4f)

  Mutex M711 (0x7b5000030540) created at:
    #0 pthread_mutex_init <null> (libtsan.so.0+0x2c5bd)
    #1 boost::recursive_mutex::recursive_mutex() <null> (libroscpp.so+0xa47ed)

  Thread T1 (tid=8888, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

SUMMARY: ThreadSanitizer: data race (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x741fd) in operator delete(void*)
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=8844)
  Cycle in lock order graph: M587 (0x7b44000004a8) => M576 (0x7b48000002b0) => M587

  Mutex M576 acquired here while holding mutex M587 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::PollManager::addPollThreadListener(boost::function<void ()> const&) <null> (libroscpp.so+0xdaab2)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M587 acquired here while holding mutex M576 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::mutex>::lock() <null> (libroscpp.so+0xa52a7)

  Thread T1 (tid=8888, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
ThreadSanitizer: reported 6 warnings
