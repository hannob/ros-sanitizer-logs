==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=32518)
  Cycle in lock order graph: M448 (0x7fb9455b60a8) => M451 (0x7fb9455b6148) => M448

  Mutex M451 acquired here while holding mutex M448 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M448 acquired here while holding mutex M451 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=32518)
  Cycle in lock order graph: M614 (0x7b4400000520) => M615 (0x7b4400000560) => M614

  Mutex M615 acquired here while holding mutex M614 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::recursive_mutex>::lock() <null> (libroscpp.so+0xa4ddf)
    #2 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2402 (libgtest.so+0x9aef1)
    #3 void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2438 (libgtest.so+0x91daf)
    #4 testing::Test::Run() /usr/src/googletest/googletest/src/gtest.cc:2474 (libgtest.so+0x6c3dd)
    #5 testing::TestInfo::Run() /usr/src/googletest/googletest/src/gtest.cc:2656 (libgtest.so+0x6cfb7)
    #6 testing::TestCase::Run() /usr/src/googletest/googletest/src/gtest.cc:2776 (libgtest.so+0x6d952)
    #7 testing::internal::UnitTestImpl::RunAllTests() /usr/src/googletest/googletest/src/gtest.cc:4651 (libgtest.so+0x76655)
    #8 bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2402 (libgtest.so+0x9c9f6)
    #9 bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2438 (libgtest.so+0x933d1)
    #10 testing::UnitTest::Run() /usr/src/googletest/googletest/src/gtest.cc:4259 (libgtest.so+0x74ae3)
    #11 RUN_ALL_TESTS() /usr/src/googletest/googletest/include/gtest/gtest.h:2233 (test_callbacks_cpp+0xaaf4)
    #12 main /catkin/buildtmp/test_bond/src/test_bond/test/test_callbacks_cpp.cpp:88 (test_callbacks_cpp+0x8f45)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M614 acquired here while holding mutex M615 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::mutex::lock() <null> (libbondcpp.so+0x20e47)
    #2 boost::detail::shared_count::~shared_count() /usr/include/boost/smart_ptr/detail/shared_count.hpp:426 (test_callbacks_cpp+0xa4e8)
    #3 boost::shared_ptr<ros::AsyncSpinnerImpl>::~shared_ptr() /usr/include/boost/smart_ptr/shared_ptr.hpp:341 (test_callbacks_cpp+0xac25)
    #4 ros::AsyncSpinner::~AsyncSpinner() /opt/ros/melodic/include/ros/spinner.h:93 (test_callbacks_cpp+0xac51)
    #5 main /catkin/buildtmp/test_bond/src/test_bond/test/test_callbacks_cpp.cpp:85 (test_callbacks_cpp+0x8f7e)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
ThreadSanitizer: reported 2 warnings
