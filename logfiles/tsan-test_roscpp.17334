==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=17334)
  Cycle in lock order graph: M448 (0x7fad640d50a8) => M451 (0x7fad640d5148) => M448

  Mutex M451 acquired here while holding mutex M448 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M448 acquired here while holding mutex M451 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=17334)
  Cycle in lock order graph: M601 (0x7b4400000520) => M602 (0x7b4400000560) => M601

  Mutex M602 acquired here while holding mutex M601 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::recursive_mutex>::lock() <null> (libroscpp.so+0xa4ddf)
    #2 IncrementingSequence_incrementing_Test::TestBody() /catkin/buildtmp/test_roscpp/src/test_roscpp/test/src/incrementing_sequence.cpp:60 (test_roscpp-incrementing_sequence+0x1f9ab)
    #3 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2402 (libgtest.so+0x9aef1)
    #4 void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2438 (libgtest.so+0x91daf)
    #5 testing::Test::Run() /usr/src/googletest/googletest/src/gtest.cc:2474 (libgtest.so+0x6c3dd)
    #6 testing::TestInfo::Run() /usr/src/googletest/googletest/src/gtest.cc:2656 (libgtest.so+0x6cfb7)
    #7 testing::TestCase::Run() /usr/src/googletest/googletest/src/gtest.cc:2776 (libgtest.so+0x6d952)
    #8 testing::internal::UnitTestImpl::RunAllTests() /usr/src/googletest/googletest/src/gtest.cc:4651 (libgtest.so+0x76655)
    #9 bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2402 (libgtest.so+0x9c9f6)
    #10 bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/googletest/googletest/src/gtest.cc:2438 (libgtest.so+0x933d1)
    #11 testing::UnitTest::Run() /usr/src/googletest/googletest/src/gtest.cc:4259 (libgtest.so+0x74ae3)
    #12 RUN_ALL_TESTS() /usr/src/googletest/googletest/include/gtest/gtest.h:2233 (test_roscpp-incrementing_sequence+0x20866)
    #13 main /catkin/buildtmp/test_roscpp/src/test_roscpp/test/src/incrementing_sequence.cpp:83 (test_roscpp-incrementing_sequence+0x1ff11)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M601 acquired here while holding mutex M602 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::mutex>::lock() <null> (libroscpp.so+0xa52a7)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
ThreadSanitizer: reported 2 warnings
