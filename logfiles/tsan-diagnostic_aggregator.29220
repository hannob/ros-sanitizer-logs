==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=29220)
  Cycle in lock order graph: M542 (0x7f53d7a5f0a8) => M545 (0x7f53d7a5f148) => M542

  Mutex M545 acquired here while holding mutex M542 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M542 acquired here while holding mutex M545 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 log4cxx::helpers::synchronized::synchronized(log4cxx::helpers::Mutex const&) <null> (liblog4cxx.so.10+0x14acdb)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: data race (pid=29220)
  Write of size 8 at 0x7b08000095a8 by main thread (mutexes: write M1304, write M1408):
    #0 operator delete(void*) <null> (libtsan.so.0+0x741fd)
    #1 ros::MessageDeserializer::deserialize() <null> (libroscpp.so+0x14d705)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

  Previous atomic write of size 4 at 0x7b08000095a8 by thread T1 (mutexes: write M1364, write M1365):
    #0 __tsan_atomic32_fetch_sub <null> (libtsan.so.0+0x68aed)
    #1 std::__atomic_base<int>::fetch_sub(int, std::memory_order) /usr/include/c++/7/bits/atomic_base.h:524 (aggregator_node+0xa7c6)
    #2 boost::detail::atomic_decrement(std::atomic<int>*) /usr/include/boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp:35 (aggregator_node+0xa7c6)
    #3 boost::detail::sp_counted_base::release() /usr/include/boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp:108 (aggregator_node+0xa976)
    #4 ros::Connection::readTransport() <null> (libroscpp.so+0x9f87d)

  As if synchronized via sleep:
    #0 nanosleep <null> (libtsan.so.0+0x4dd60)
    #1 ros::ros_wallsleep(unsigned int, unsigned int) <null> (librostime.so+0x10228)
    #2 __libc_start_main <null> (libc.so.6+0x21b96)

  Mutex M1304 (0x7b44000013a0) created at:
    #0 pthread_mutex_init <null> (libtsan.so.0+0x2c5bd)
    #1 ros::SubscriptionQueue::SubscriptionQueue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool) <null> (libroscpp.so+0x146fa8)
    #2 diagnostic_aggregator::Aggregator::Aggregator() /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator.cpp:69 (libdiagnostic_aggregator.so+0x111bc0)
    #3 main /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator_node.cpp:48 (aggregator_node+0x988a)

  Mutex M1408 (0x7b2c00010038) created at:
    #0 pthread_mutex_init <null> (libtsan.so.0+0x2c5bd)
    #1 ros::MessageDeserializer::MessageDeserializer(boost::shared_ptr<ros::SubscriptionCallbackHelper> const&, ros::SerializedMessage const&, boost::shared_ptr<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > const&) <null> (libroscpp.so+0x14d289)

  Mutex M1364 (0x7b5400010240) created at:
    #0 pthread_mutex_init <null> (libtsan.so.0+0x2c5bd)
    #1 ros::TransportTCP::TransportTCP(ros::PollSet*, int) <null> (libroscpp.so+0x112d4f)

  Mutex M1365 (0x7b50000206b0) created at:
    #0 pthread_mutex_init <null> (libtsan.so.0+0x2c5bd)
    #1 boost::recursive_mutex::recursive_mutex() <null> (libroscpp.so+0xa47ed)

  Thread T1 (tid=29285, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 main /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator_node.cpp:48 (aggregator_node+0x988a)

SUMMARY: ThreadSanitizer: data race (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x741fd) in operator delete(void*)
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=29220)
  Cycle in lock order graph: M727 (0x7b44000004a8) => M716 (0x7b48000002b0) => M727

  Mutex M716 acquired here while holding mutex M727 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 ros::PollManager::addPollThreadListener(boost::function<void ()> const&) <null> (libroscpp.so+0xdaab2)
    #2 main /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator_node.cpp:48 (aggregator_node+0x988a)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M727 acquired here while holding mutex M716 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::mutex>::lock() <null> (libroscpp.so+0xa52a7)

  Thread T1 (tid=29285, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 main /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator_node.cpp:48 (aggregator_node+0x988a)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
==================
WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=29220)
  Cycle in lock order graph: M724 (0x7b44000003e0) => M725 (0x7b4400000420) => M724

  Mutex M725 acquired here while holding mutex M724 in main thread:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::recursive_mutex>::lock() <null> (libroscpp.so+0xa4ddf)
    #2 diagnostic_aggregator::Aggregator::Aggregator() /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator.cpp:69 (libdiagnostic_aggregator.so+0x111bc0)
    #3 main /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator_node.cpp:48 (aggregator_node+0x988a)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M724 acquired here while holding mutex M725 in thread T1:
    #0 pthread_mutex_lock <null> (libtsan.so.0+0x3faeb)
    #1 boost::unique_lock<boost::mutex>::lock() <null> (libroscpp.so+0xa52a7)

  Thread T1 (tid=29285, running) created by main thread at:
    #0 pthread_create <null> (libtsan.so.0+0x2bcfe)
    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.65.1+0x10b09)
    #2 main /catkin/buildtmp/diagnostic_aggregator/src/diagnostic_aggregator/src/aggregator_node.cpp:48 (aggregator_node+0x988a)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/usr/lib/x86_64-linux-gnu/libtsan.so.0+0x3faeb) in __interceptor_pthread_mutex_lock
==================
ThreadSanitizer: reported 4 warnings
